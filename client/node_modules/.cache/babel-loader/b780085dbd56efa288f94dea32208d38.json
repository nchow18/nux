{"ast":null,"code":"var _jsxFileName = \"/Users/nc/Desktop/projects/nuxe/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useState } from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from './utils/auth';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\nfunction App() {\n  _s();\n\n  const [currentHeaderLink, setCurrentHeaderLink] = useState(headerLinks[0]);\n  const [cartModal, setCartModal] = useState(false);\n  const [productLinks] = useState(Auth.getCategories());\n  const [currentProductLink, setCurrentProductLink] = useState(productLinks[0]);\n  const [cartCount, setCartCount] = useState(0);\n  Auth.checkToken();\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(UserProvider, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: () => /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              component: NoMatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"5hkNt8Io5rTwIkNlsEX1gPzXIOE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nc/Desktop/projects/nuxe/client/src/App.js"],"names":["React","useState","ApolloProvider","ApolloClient","BrowserRouter","Router","Route","Switch","Auth","client","request","operation","token","localStorage","getItem","setContext","headers","authorization","uri","App","currentHeaderLink","setCurrentHeaderLink","headerLinks","cartModal","setCartModal","productLinks","getCategories","currentProductLink","setCurrentProductLink","cartCount","setCartCount","checkToken","NoMatch"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,OAAO,EAAEC,SAAS,IAAI;AAClB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACAH,IAAAA,SAAS,CAACI,UAAV,CAAqB;AACjBC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEL,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADtC;AADQ,KAArB;AAKH,GAR6B;AAS9BM,EAAAA,GAAG,EAAE;AATyB,CAAjB,CAAf;;AAYA,SAASC,GAAT,GAAe;AAAA;;AAKd,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CpB,QAAQ,CAACqB,WAAW,CAAC,CAAD,CAAZ,CAA1D;AACC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACwB,YAAD,IAAiBxB,QAAQ,CAACO,IAAI,CAACkB,aAAL,EAAD,CAA/B;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8C3B,QAAQ,CAACwB,YAAY,CAAC,CAAD,CAAb,CAA5D;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,CAAD,CAA1C;AAEAO,EAAAA,IAAI,CAACuB,UAAL;AAEE,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEtB,MAAxB;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,YAAD;AAAA,+BACE;AAAA,kCAEJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAFI,eAKJ,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,KAAK,MADP;AACQ,cAAA,IAAI,EAAC,GADb;AAEE,cAAA,MAAM,EAAE,mBAAM,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAFhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEuB;AAAlB;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALI;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAnCQb,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from './utils/auth';\nimport './App.css';\n\nconst client = new ApolloClient({\n  request: operation => {\n      const token = localStorage.getItem('id_token');\n      operation.setContext({\n          headers: {\n              authorization: token ? `Bearer ${token}` : ''\n          }\n      });\n  },\n  uri: '/graphql'\n});\n\nfunction App() {\n\n\n\n\n\tconst [currentHeaderLink, setCurrentHeaderLink] = useState(headerLinks[0]);\n  const [cartModal, setCartModal] = useState(false)\n  const [productLinks] = useState(Auth.getCategories())\n  const [currentProductLink, setCurrentProductLink] = useState(productLinks[0])\n  const [cartCount, setCartCount] = useState(0);\n\n  Auth.checkToken();\n\n    return (\n        <ApolloProvider client={client}>\n          <Router>\n            <UserProvider>\n              <>\n\n          <Header \n\t\t\t\t\t/>\n      \n          <Switch>\n            <Route \n              exact path='/' \n              render={() => <Home \n              />}\n              />\n            <Route component={NoMatch} />\n          </Switch>\n    </>\n  </UserProvider> \n</Router>\n</ApolloProvider>\n    );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}